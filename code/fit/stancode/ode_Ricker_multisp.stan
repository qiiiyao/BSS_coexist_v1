// reciprocal-model-1sp.stan
functions {
  real[] ode_Ricker(real t,       // time
               real[] z_init,   // system state {competitor1, cometitor2}
               real[] theta, // parameters
               real[] x_r,   // unused data
               int[] x_i) {
    
    real dydt[50];
    
    dydt[1] = ( exp(theta[1]-theta[2]*z_init[1]-theta[3]*z_init[2]-theta[4]*z_init[3]-theta[5]*z_init[4]-theta[6]*z_init[5]-theta[7]*z_init[6]-theta[8]*z_init[7]-theta[9]*z_init[8]-theta[10]*z_init[9]-theta[11]*z_init[10]-theta[12]*z_init[11]-theta[13]*z_init[12]-theta[14]*z_init[13]-theta[15]*z_init[14]-theta[16]*z_init[15]-theta[17]*z_init[16]-theta[18]*z_init[17]-theta[19]*z_init[18]-theta[20]*z_init[19]-theta[21]*z_init[20]-theta[22]*z_init[21]-theta[23]*z_init[22]-theta[24]*z_init[23]-theta[25]*z_init[24]-theta[26]*z_init[25]-theta[27]*z_init[26]-theta[28]*z_init[27]-theta[29]*z_init[28]-theta[30]*z_init[29]-theta[31]*z_init[30]-theta[32]*z_init[31]-theta[33]*z_init[32]-theta[34]*z_init[33]-theta[35]*z_init[34]-theta[36]*z_init[35]-theta[37]*z_init[36]-theta[38]*z_init[37]-theta[39]*z_init[38]-theta[40]*z_init[39]-theta[41]*z_init[40]-theta[42]*z_init[41]-theta[43]*z_init[42]-theta[44]*z_init[43]-theta[45]*z_init[44]-theta[46]*z_init[45]-theta[47]*z_init[46]-theta[48]*z_init[47]-theta[49]*z_init[48]-theta[50]*z_init[49]-theta[51]*z_init[50])) * z_init[1]; // Competitor 1
    dydt[2] = ( exp(theta[52]-theta[53]*z_init[1]-theta[54]*z_init[2]-theta[55]*z_init[3]-theta[56]*z_init[4]-theta[57]*z_init[5]-theta[58]*z_init[6]-theta[59]*z_init[7]-theta[60]*z_init[8]-theta[61]*z_init[9]-theta[62]*z_init[10]-theta[63]*z_init[11]-theta[64]*z_init[12]-theta[65]*z_init[13]-theta[66]*z_init[14]-theta[67]*z_init[15]-theta[68]*z_init[16]-theta[69]*z_init[17]-theta[70]*z_init[18]-theta[71]*z_init[19]-theta[72]*z_init[20]-theta[73]*z_init[21]-theta[74]*z_init[22]-theta[75]*z_init[23]-theta[76]*z_init[24]-theta[77]*z_init[25]-theta[78]*z_init[26]-theta[79]*z_init[27]-theta[80]*z_init[28]-theta[81]*z_init[29]-theta[82]*z_init[30]-theta[83]*z_init[31]-theta[84]*z_init[32]-theta[85]*z_init[33]-theta[86]*z_init[34]-theta[87]*z_init[35]-theta[88]*z_init[36]-theta[89]*z_init[37]-theta[90]*z_init[38]-theta[91]*z_init[39]-theta[92]*z_init[40]-theta[93]*z_init[41]-theta[94]*z_init[42]-theta[95]*z_init[43]-theta[96]*z_init[44]-theta[97]*z_init[45]-theta[98]*z_init[46]-theta[99]*z_init[47]-theta[100]*z_init[48]-theta[101]*z_init[49]-theta[102]*z_init[50] )) * z_init[2]; // Competitor 2
    dydt[3] = ( exp(theta[103]-theta[104]*z_init[1]-theta[105]*z_init[2]-theta[106]*z_init[3]-theta[107]*z_init[4]-theta[108]*z_init[5]-theta[109]*z_init[6]-theta[110]*z_init[7]-theta[111]*z_init[8]-theta[112]*z_init[9]-theta[113]*z_init[10]-theta[114]*z_init[11]-theta[115]*z_init[12]-theta[116]*z_init[13]-theta[117]*z_init[14]-theta[118]*z_init[15]-theta[119]*z_init[16]-theta[120]*z_init[17]-theta[121]*z_init[18]-theta[122]*z_init[19]-theta[123]*z_init[20]-theta[124]*z_init[21]-theta[125]*z_init[22]-theta[126]*z_init[23]-theta[127]*z_init[24]-theta[128]*z_init[25]-theta[129]*z_init[26]-theta[130]*z_init[27]-theta[131]*z_init[28]-theta[132]*z_init[29]-theta[133]*z_init[30]-theta[134]*z_init[31]-theta[135]*z_init[32]-theta[136]*z_init[33]-theta[137]*z_init[34]-theta[138]*z_init[35]-theta[139]*z_init[36]-theta[140]*z_init[37]-theta[141]*z_init[38]-theta[142]*z_init[39]-theta[143]*z_init[40]-theta[144]*z_init[41]-theta[145]*z_init[42]-theta[146]*z_init[43]-theta[147]*z_init[44]-theta[148]*z_init[45]-theta[149]*z_init[46]-theta[150]*z_init[47]-theta[151]*z_init[48]-theta[152]*z_init[49]-theta[153]*z_init[50] )) * z_init[3]; // Competitor 1
    dydt[4] = ( exp(theta[154]-theta[155]*z_init[1]-theta[156]*z_init[2]-theta[157]*z_init[3]-theta[158]*z_init[4]-theta[159]*z_init[5]-theta[160]*z_init[6]-theta[161]*z_init[7]-theta[162]*z_init[8]-theta[163]*z_init[9]-theta[164]*z_init[10]-theta[165]*z_init[11]-theta[166]*z_init[12]-theta[167]*z_init[13]-theta[168]*z_init[14]-theta[169]*z_init[15]-theta[170]*z_init[16]-theta[171]*z_init[17]-theta[172]*z_init[18]-theta[173]*z_init[19]-theta[174]*z_init[20]-theta[175]*z_init[21]-theta[176]*z_init[22]-theta[177]*z_init[23]-theta[178]*z_init[24]-theta[179]*z_init[25]-theta[180]*z_init[26]-theta[181]*z_init[27]-theta[182]*z_init[28]-theta[183]*z_init[29]-theta[184]*z_init[30]-theta[185]*z_init[31]-theta[186]*z_init[32]-theta[187]*z_init[33]-theta[188]*z_init[34]-theta[189]*z_init[35]-theta[190]*z_init[36]-theta[191]*z_init[37]-theta[192]*z_init[38]-theta[193]*z_init[39]-theta[194]*z_init[40]-theta[195]*z_init[41]-theta[196]*z_init[42]-theta[197]*z_init[43]-theta[198]*z_init[44]-theta[199]*z_init[45]-theta[200]*z_init[46]-theta[201]*z_init[47]-theta[202]*z_init[48]-theta[203]*z_init[49]-theta[204]*z_init[50] )) * z_init[4]; // Competitor 2
    dydt[5] = ( exp(theta[205]-theta[206]*z_init[1]-theta[207]*z_init[2]-theta[208]*z_init[3]-theta[209]*z_init[4]-theta[210]*z_init[5]-theta[211]*z_init[6]-theta[212]*z_init[7]-theta[213]*z_init[8]-theta[214]*z_init[9]-theta[215]*z_init[10]-theta[216]*z_init[11]-theta[217]*z_init[12]-theta[218]*z_init[13]-theta[219]*z_init[14]-theta[220]*z_init[15]-theta[221]*z_init[16]-theta[222]*z_init[17]-theta[223]*z_init[18]-theta[224]*z_init[19]-theta[225]*z_init[20]-theta[226]*z_init[21]-theta[227]*z_init[22]-theta[228]*z_init[23]-theta[229]*z_init[24]-theta[230]*z_init[25]-theta[231]*z_init[26]-theta[232]*z_init[27]-theta[233]*z_init[28]-theta[234]*z_init[29]-theta[235]*z_init[30]-theta[236]*z_init[31]-theta[237]*z_init[32]-theta[238]*z_init[33]-theta[239]*z_init[34]-theta[240]*z_init[35]-theta[241]*z_init[36]-theta[242]*z_init[37]-theta[243]*z_init[38]-theta[244]*z_init[39]-theta[245]*z_init[40]-theta[246]*z_init[41]-theta[247]*z_init[42]-theta[248]*z_init[43]-theta[249]*z_init[44]-theta[250]*z_init[45]-theta[251]*z_init[46]-theta[252]*z_init[47]-theta[253]*z_init[48]-theta[254]*z_init[49]-theta[255]*z_init[50] )) * z_init[5]; // Competitor 1
    dydt[6] = ( exp(theta[256]-theta[257]*z_init[1]-theta[258]*z_init[2]-theta[259]*z_init[3]-theta[260]*z_init[4]-theta[261]*z_init[5]-theta[262]*z_init[6]-theta[263]*z_init[7]-theta[264]*z_init[8]-theta[265]*z_init[9]-theta[266]*z_init[10]-theta[267]*z_init[11]-theta[268]*z_init[12]-theta[269]*z_init[13]-theta[270]*z_init[14]-theta[271]*z_init[15]-theta[272]*z_init[16]-theta[273]*z_init[17]-theta[274]*z_init[18]-theta[275]*z_init[19]-theta[276]*z_init[20]-theta[277]*z_init[21]-theta[278]*z_init[22]-theta[279]*z_init[23]-theta[280]*z_init[24]-theta[281]*z_init[25]-theta[282]*z_init[26]-theta[283]*z_init[27]-theta[284]*z_init[28]-theta[285]*z_init[29]-theta[286]*z_init[30]-theta[287]*z_init[31]-theta[288]*z_init[32]-theta[289]*z_init[33]-theta[290]*z_init[34]-theta[291]*z_init[35]-theta[292]*z_init[36]-theta[293]*z_init[37]-theta[294]*z_init[38]-theta[295]*z_init[39]-theta[296]*z_init[40]-theta[297]*z_init[41]-theta[298]*z_init[42]-theta[299]*z_init[43]-theta[300]*z_init[44]-theta[301]*z_init[45]-theta[302]*z_init[46]-theta[303]*z_init[47]-theta[304]*z_init[48]-theta[305]*z_init[49]-theta[306]*z_init[50] )) * z_init[6]; // Competitor 2
    dydt[7] = ( exp(theta[307]-theta[308]*z_init[1]-theta[309]*z_init[2]-theta[310]*z_init[3]-theta[311]*z_init[4]-theta[312]*z_init[5]-theta[313]*z_init[6]-theta[314]*z_init[7]-theta[315]*z_init[8]-theta[316]*z_init[9]-theta[317]*z_init[10]-theta[318]*z_init[11]-theta[319]*z_init[12]-theta[320]*z_init[13]-theta[321]*z_init[14]-theta[322]*z_init[15]-theta[323]*z_init[16]-theta[324]*z_init[17]-theta[325]*z_init[18]-theta[326]*z_init[19]-theta[327]*z_init[20]-theta[328]*z_init[21]-theta[329]*z_init[22]-theta[330]*z_init[23]-theta[331]*z_init[24]-theta[332]*z_init[25]-theta[333]*z_init[26]-theta[334]*z_init[27]-theta[335]*z_init[28]-theta[336]*z_init[29]-theta[337]*z_init[30]-theta[338]*z_init[31]-theta[339]*z_init[32]-theta[340]*z_init[33]-theta[341]*z_init[34]-theta[342]*z_init[35]-theta[343]*z_init[36]-theta[344]*z_init[37]-theta[345]*z_init[38]-theta[346]*z_init[39]-theta[347]*z_init[40]-theta[348]*z_init[41]-theta[349]*z_init[42]-theta[350]*z_init[43]-theta[351]*z_init[44]-theta[352]*z_init[45]-theta[353]*z_init[46]-theta[354]*z_init[47]-theta[355]*z_init[48]-theta[356]*z_init[49]-theta[357]*z_init[50] )) * z_init[7]; // Competitor 1
    dydt[8] = ( exp(theta[358]-theta[359]*z_init[1]-theta[360]*z_init[2]-theta[361]*z_init[3]-theta[362]*z_init[4]-theta[363]*z_init[5]-theta[364]*z_init[6]-theta[365]*z_init[7]-theta[366]*z_init[8]-theta[367]*z_init[9]-theta[368]*z_init[10]-theta[369]*z_init[11]-theta[370]*z_init[12]-theta[371]*z_init[13]-theta[372]*z_init[14]-theta[373]*z_init[15]-theta[374]*z_init[16]-theta[375]*z_init[17]-theta[376]*z_init[18]-theta[377]*z_init[19]-theta[378]*z_init[20]-theta[379]*z_init[21]-theta[380]*z_init[22]-theta[381]*z_init[23]-theta[382]*z_init[24]-theta[383]*z_init[25]-theta[384]*z_init[26]-theta[385]*z_init[27]-theta[386]*z_init[28]-theta[387]*z_init[29]-theta[388]*z_init[30]-theta[389]*z_init[31]-theta[390]*z_init[32]-theta[391]*z_init[33]-theta[392]*z_init[34]-theta[393]*z_init[35]-theta[394]*z_init[36]-theta[395]*z_init[37]-theta[396]*z_init[38]-theta[397]*z_init[39]-theta[398]*z_init[40]-theta[399]*z_init[41]-theta[400]*z_init[42]-theta[401]*z_init[43]-theta[402]*z_init[44]-theta[403]*z_init[45]-theta[404]*z_init[46]-theta[405]*z_init[47]-theta[406]*z_init[48]-theta[407]*z_init[49]-theta[408]*z_init[50] )) * z_init[8]; // Competitor 2
    dydt[9] = ( exp(theta[409]-theta[410]*z_init[1]-theta[411]*z_init[2]-theta[412]*z_init[3]-theta[413]*z_init[4]-theta[414]*z_init[5]-theta[415]*z_init[6]-theta[416]*z_init[7]-theta[417]*z_init[8]-theta[418]*z_init[9]-theta[419]*z_init[10]-theta[420]*z_init[11]-theta[421]*z_init[12]-theta[422]*z_init[13]-theta[423]*z_init[14]-theta[424]*z_init[15]-theta[425]*z_init[16]-theta[426]*z_init[17]-theta[427]*z_init[18]-theta[428]*z_init[19]-theta[429]*z_init[20]-theta[430]*z_init[21]-theta[431]*z_init[22]-theta[432]*z_init[23]-theta[433]*z_init[24]-theta[434]*z_init[25]-theta[435]*z_init[26]-theta[436]*z_init[27]-theta[437]*z_init[28]-theta[438]*z_init[29]-theta[439]*z_init[30]-theta[440]*z_init[31]-theta[441]*z_init[32]-theta[442]*z_init[33]-theta[443]*z_init[34]-theta[444]*z_init[35]-theta[445]*z_init[36]-theta[446]*z_init[37]-theta[447]*z_init[38]-theta[448]*z_init[39]-theta[449]*z_init[40]-theta[450]*z_init[41]-theta[451]*z_init[42]-theta[452]*z_init[43]-theta[453]*z_init[44]-theta[454]*z_init[45]-theta[455]*z_init[46]-theta[456]*z_init[47]-theta[457]*z_init[48]-theta[458]*z_init[49]-theta[459]*z_init[50] )) * z_init[9]; // Competitor 1
    dydt[10] = ( exp(theta[460]-theta[461]*z_init[1]-theta[462]*z_init[2]-theta[463]*z_init[3]-theta[464]*z_init[4]-theta[465]*z_init[5]-theta[466]*z_init[6]-theta[467]*z_init[7]-theta[468]*z_init[8]-theta[469]*z_init[9]-theta[470]*z_init[10]-theta[471]*z_init[11]-theta[472]*z_init[12]-theta[473]*z_init[13]-theta[474]*z_init[14]-theta[475]*z_init[15]-theta[476]*z_init[16]-theta[477]*z_init[17]-theta[478]*z_init[18]-theta[479]*z_init[19]-theta[480]*z_init[20]-theta[481]*z_init[21]-theta[482]*z_init[22]-theta[483]*z_init[23]-theta[484]*z_init[24]-theta[485]*z_init[25]-theta[486]*z_init[26]-theta[487]*z_init[27]-theta[488]*z_init[28]-theta[489]*z_init[29]-theta[490]*z_init[30]-theta[491]*z_init[31]-theta[492]*z_init[32]-theta[493]*z_init[33]-theta[494]*z_init[34]-theta[495]*z_init[35]-theta[496]*z_init[36]-theta[497]*z_init[37]-theta[498]*z_init[38]-theta[499]*z_init[39]-theta[500]*z_init[40]-theta[501]*z_init[41]-theta[502]*z_init[42]-theta[503]*z_init[43]-theta[504]*z_init[44]-theta[505]*z_init[45]-theta[506]*z_init[46]-theta[507]*z_init[47]-theta[508]*z_init[48]-theta[509]*z_init[49]-theta[510]*z_init[50])) * z_init[10]; // Competitor 2
    dydt[11] = ( exp(theta[511]-theta[512]*z_init[1]-theta[513]*z_init[2]-theta[514]*z_init[3]-theta[515]*z_init[4]-theta[516]*z_init[5]-theta[517]*z_init[6]-theta[518]*z_init[7]-theta[519]*z_init[8]-theta[520]*z_init[9]-theta[521]*z_init[10]-theta[522]*z_init[11]-theta[523]*z_init[12]-theta[524]*z_init[13]-theta[525]*z_init[14]-theta[526]*z_init[15]-theta[527]*z_init[16]-theta[528]*z_init[17]-theta[529]*z_init[18]-theta[530]*z_init[19]-theta[531]*z_init[20]-theta[532]*z_init[21]-theta[533]*z_init[22]-theta[534]*z_init[23]-theta[535]*z_init[24]-theta[536]*z_init[25]-theta[537]*z_init[26]-theta[538]*z_init[27]-theta[539]*z_init[28]-theta[540]*z_init[29]-theta[541]*z_init[30]-theta[542]*z_init[31]-theta[543]*z_init[32]-theta[544]*z_init[33]-theta[545]*z_init[34]-theta[546]*z_init[35]-theta[547]*z_init[36]-theta[548]*z_init[37]-theta[549]*z_init[38]-theta[550]*z_init[39]-theta[551]*z_init[40]-theta[552]*z_init[41]-theta[553]*z_init[42]-theta[554]*z_init[43]-theta[555]*z_init[44]-theta[556]*z_init[45]-theta[557]*z_init[46]-theta[558]*z_init[47]-theta[559]*z_init[48]-theta[560]*z_init[49]-theta[561]*z_init[50] )) * z_init[11]; // Competitor 1
    dydt[12] = ( exp(theta[562]-theta[563]*z_init[1]-theta[564]*z_init[2]-theta[565]*z_init[3]-theta[566]*z_init[4]-theta[567]*z_init[5]-theta[568]*z_init[6]-theta[569]*z_init[7]-theta[570]*z_init[8]-theta[571]*z_init[9]-theta[572]*z_init[10]-theta[573]*z_init[11]-theta[574]*z_init[12]-theta[575]*z_init[13]-theta[576]*z_init[14]-theta[577]*z_init[15]-theta[578]*z_init[16]-theta[579]*z_init[17]-theta[580]*z_init[18]-theta[581]*z_init[19]-theta[582]*z_init[20]-theta[583]*z_init[21]-theta[584]*z_init[22]-theta[585]*z_init[23]-theta[586]*z_init[24]-theta[587]*z_init[25]-theta[588]*z_init[26]-theta[589]*z_init[27]-theta[590]*z_init[28]-theta[591]*z_init[29]-theta[592]*z_init[30]-theta[593]*z_init[31]-theta[594]*z_init[32]-theta[595]*z_init[33]-theta[596]*z_init[34]-theta[597]*z_init[35]-theta[598]*z_init[36]-theta[599]*z_init[37]-theta[600]*z_init[38]-theta[601]*z_init[39]-theta[602]*z_init[40]-theta[603]*z_init[41]-theta[604]*z_init[42]-theta[605]*z_init[43]-theta[606]*z_init[44]-theta[607]*z_init[45]-theta[608]*z_init[46]-theta[609]*z_init[47]-theta[610]*z_init[48]-theta[611]*z_init[49]-theta[612]*z_init[50])) * z_init[12]; // Competitor 2
    dydt[13] = ( exp(theta[613]-theta[614]*z_init[1]-theta[615]*z_init[2]-theta[616]*z_init[3]-theta[617]*z_init[4]-theta[618]*z_init[5]-theta[619]*z_init[6]-theta[620]*z_init[7]-theta[621]*z_init[8]-theta[622]*z_init[9]-theta[623]*z_init[10]-theta[624]*z_init[11]-theta[625]*z_init[12]-theta[626]*z_init[13]-theta[627]*z_init[14]-theta[628]*z_init[15]-theta[629]*z_init[16]-theta[630]*z_init[17]-theta[631]*z_init[18]-theta[632]*z_init[19]-theta[633]*z_init[20]-theta[634]*z_init[21]-theta[635]*z_init[22]-theta[636]*z_init[23]-theta[637]*z_init[24]-theta[638]*z_init[25]-theta[639]*z_init[26]-theta[640]*z_init[27]-theta[641]*z_init[28]-theta[642]*z_init[29]-theta[643]*z_init[30]-theta[644]*z_init[31]-theta[645]*z_init[32]-theta[646]*z_init[33]-theta[647]*z_init[34]-theta[648]*z_init[35]-theta[649]*z_init[36]-theta[650]*z_init[37]-theta[651]*z_init[38]-theta[652]*z_init[39]-theta[653]*z_init[40]-theta[654]*z_init[41]-theta[655]*z_init[42]-theta[656]*z_init[43]-theta[657]*z_init[44]-theta[658]*z_init[45]-theta[659]*z_init[46]-theta[660]*z_init[47]-theta[661]*z_init[48]-theta[662]*z_init[49]-theta[663]*z_init[50] )) * z_init[13]; // Competitor 1
    dydt[14] = ( exp(theta[664]-theta[665]*z_init[1]-theta[666]*z_init[2]-theta[667]*z_init[3]-theta[668]*z_init[4]-theta[669]*z_init[5]-theta[670]*z_init[6]-theta[671]*z_init[7]-theta[672]*z_init[8]-theta[673]*z_init[9]-theta[674]*z_init[10]-theta[675]*z_init[11]-theta[676]*z_init[12]-theta[677]*z_init[13]-theta[678]*z_init[14]-theta[679]*z_init[15]-theta[680]*z_init[16]-theta[681]*z_init[17]-theta[682]*z_init[18]-theta[683]*z_init[19]-theta[684]*z_init[20]-theta[685]*z_init[21]-theta[686]*z_init[22]-theta[687]*z_init[23]-theta[688]*z_init[24]-theta[689]*z_init[25]-theta[690]*z_init[26]-theta[691]*z_init[27]-theta[692]*z_init[28]-theta[693]*z_init[29]-theta[694]*z_init[30]-theta[695]*z_init[31]-theta[696]*z_init[32]-theta[697]*z_init[33]-theta[698]*z_init[34]-theta[699]*z_init[35]-theta[700]*z_init[36]-theta[701]*z_init[37]-theta[702]*z_init[38]-theta[703]*z_init[39]-theta[704]*z_init[40]-theta[705]*z_init[41]-theta[706]*z_init[42]-theta[707]*z_init[43]-theta[708]*z_init[44]-theta[709]*z_init[45]-theta[710]*z_init[46]-theta[711]*z_init[47]-theta[712]*z_init[48]-theta[713]*z_init[49]-theta[714]*z_init[50])) * z_init[14]; // Competitor 2
    dydt[15] = ( exp(theta[715]-theta[716]*z_init[1]-theta[717]*z_init[2]-theta[718]*z_init[3]-theta[719]*z_init[4]-theta[720]*z_init[5]-theta[721]*z_init[6]-theta[722]*z_init[7]-theta[723]*z_init[8]-theta[724]*z_init[9]-theta[725]*z_init[10]-theta[726]*z_init[11]-theta[727]*z_init[12]-theta[728]*z_init[13]-theta[729]*z_init[14]-theta[730]*z_init[15]-theta[731]*z_init[16]-theta[732]*z_init[17]-theta[733]*z_init[18]-theta[734]*z_init[19]-theta[735]*z_init[20]-theta[736]*z_init[21]-theta[737]*z_init[22]-theta[738]*z_init[23]-theta[739]*z_init[24]-theta[740]*z_init[25]-theta[741]*z_init[26]-theta[742]*z_init[27]-theta[743]*z_init[28]-theta[744]*z_init[29]-theta[745]*z_init[30]-theta[746]*z_init[31]-theta[747]*z_init[32]-theta[748]*z_init[33]-theta[749]*z_init[34]-theta[750]*z_init[35]-theta[751]*z_init[36]-theta[752]*z_init[37]-theta[753]*z_init[38]-theta[754]*z_init[39]-theta[755]*z_init[40]-theta[756]*z_init[41]-theta[757]*z_init[42]-theta[758]*z_init[43]-theta[759]*z_init[44]-theta[760]*z_init[45]-theta[761]*z_init[46]-theta[762]*z_init[47]-theta[763]*z_init[48]-theta[764]*z_init[49]-theta[765]*z_init[50] )) * z_init[15]; // Competitor 1
    dydt[16] = ( exp(theta[766]-theta[767]*z_init[1]-theta[768]*z_init[2]-theta[769]*z_init[3]-theta[770]*z_init[4]-theta[771]*z_init[5]-theta[772]*z_init[6]-theta[773]*z_init[7]-theta[774]*z_init[8]-theta[775]*z_init[9]-theta[776]*z_init[10]-theta[777]*z_init[11]-theta[778]*z_init[12]-theta[779]*z_init[13]-theta[780]*z_init[14]-theta[781]*z_init[15]-theta[782]*z_init[16]-theta[783]*z_init[17]-theta[784]*z_init[18]-theta[785]*z_init[19]-theta[786]*z_init[20]-theta[787]*z_init[21]-theta[788]*z_init[22]-theta[789]*z_init[23]-theta[790]*z_init[24]-theta[791]*z_init[25]-theta[792]*z_init[26]-theta[793]*z_init[27]-theta[794]*z_init[28]-theta[795]*z_init[29]-theta[796]*z_init[30]-theta[797]*z_init[31]-theta[798]*z_init[32]-theta[799]*z_init[33]-theta[800]*z_init[34]-theta[801]*z_init[35]-theta[802]*z_init[36]-theta[803]*z_init[37]-theta[804]*z_init[38]-theta[805]*z_init[39]-theta[806]*z_init[40]-theta[807]*z_init[41]-theta[808]*z_init[42]-theta[809]*z_init[43]-theta[810]*z_init[44]-theta[811]*z_init[45]-theta[812]*z_init[46]-theta[813]*z_init[47]-theta[814]*z_init[48]-theta[815]*z_init[49]-theta[816]*z_init[50])) * z_init[16]; // Competitor 2
    dydt[17] = ( exp(theta[817]-theta[818]*z_init[1]-theta[819]*z_init[2]-theta[820]*z_init[3]-theta[821]*z_init[4]-theta[822]*z_init[5]-theta[823]*z_init[6]-theta[824]*z_init[7]-theta[825]*z_init[8]-theta[826]*z_init[9]-theta[827]*z_init[10]-theta[828]*z_init[11]-theta[829]*z_init[12]-theta[830]*z_init[13]-theta[831]*z_init[14]-theta[832]*z_init[15]-theta[833]*z_init[16]-theta[834]*z_init[17]-theta[835]*z_init[18]-theta[836]*z_init[19]-theta[837]*z_init[20]-theta[838]*z_init[21]-theta[839]*z_init[22]-theta[840]*z_init[23]-theta[841]*z_init[24]-theta[842]*z_init[25]-theta[843]*z_init[26]-theta[844]*z_init[27]-theta[845]*z_init[28]-theta[846]*z_init[29]-theta[847]*z_init[30]-theta[848]*z_init[31]-theta[849]*z_init[32]-theta[850]*z_init[33]-theta[851]*z_init[34]-theta[852]*z_init[35]-theta[853]*z_init[36]-theta[854]*z_init[37]-theta[855]*z_init[38]-theta[856]*z_init[39]-theta[857]*z_init[40]-theta[858]*z_init[41]-theta[859]*z_init[42]-theta[860]*z_init[43]-theta[861]*z_init[44]-theta[862]*z_init[45]-theta[863]*z_init[46]-theta[864]*z_init[47]-theta[865]*z_init[48]-theta[866]*z_init[49]-theta[867]*z_init[50] )) * z_init[17]; // Competitor 1
    dydt[18] = ( exp(theta[868]-theta[869]*z_init[1]-theta[870]*z_init[2]-theta[871]*z_init[3]-theta[872]*z_init[4]-theta[873]*z_init[5]-theta[874]*z_init[6]-theta[875]*z_init[7]-theta[876]*z_init[8]-theta[877]*z_init[9]-theta[878]*z_init[10]-theta[879]*z_init[11]-theta[880]*z_init[12]-theta[881]*z_init[13]-theta[882]*z_init[14]-theta[883]*z_init[15]-theta[884]*z_init[16]-theta[885]*z_init[17]-theta[886]*z_init[18]-theta[887]*z_init[19]-theta[888]*z_init[20]-theta[889]*z_init[21]-theta[890]*z_init[22]-theta[891]*z_init[23]-theta[892]*z_init[24]-theta[893]*z_init[25]-theta[894]*z_init[26]-theta[895]*z_init[27]-theta[896]*z_init[28]-theta[897]*z_init[29]-theta[898]*z_init[30]-theta[899]*z_init[31]-theta[900]*z_init[32]-theta[901]*z_init[33]-theta[902]*z_init[34]-theta[903]*z_init[35]-theta[904]*z_init[36]-theta[905]*z_init[37]-theta[906]*z_init[38]-theta[907]*z_init[39]-theta[908]*z_init[40]-theta[909]*z_init[41]-theta[910]*z_init[42]-theta[911]*z_init[43]-theta[912]*z_init[44]-theta[913]*z_init[45]-theta[914]*z_init[46]-theta[915]*z_init[47]-theta[916]*z_init[48]-theta[917]*z_init[49]-theta[918]*z_init[50])) * z_init[18]; // Competitor 2
    dydt[19] = ( exp(theta[919]-theta[920]*z_init[1]-theta[921]*z_init[2]-theta[922]*z_init[3]-theta[923]*z_init[4]-theta[924]*z_init[5]-theta[925]*z_init[6]-theta[926]*z_init[7]-theta[927]*z_init[8]-theta[928]*z_init[9]-theta[929]*z_init[10]-theta[930]*z_init[11]-theta[931]*z_init[12]-theta[932]*z_init[13]-theta[933]*z_init[14]-theta[934]*z_init[15]-theta[935]*z_init[16]-theta[936]*z_init[17]-theta[937]*z_init[18]-theta[938]*z_init[19]-theta[939]*z_init[20]-theta[940]*z_init[21]-theta[941]*z_init[22]-theta[942]*z_init[23]-theta[943]*z_init[24]-theta[944]*z_init[25]-theta[945]*z_init[26]-theta[946]*z_init[27]-theta[947]*z_init[28]-theta[948]*z_init[29]-theta[949]*z_init[30]-theta[950]*z_init[31]-theta[951]*z_init[32]-theta[952]*z_init[33]-theta[953]*z_init[34]-theta[954]*z_init[35]-theta[955]*z_init[36]-theta[956]*z_init[37]-theta[957]*z_init[38]-theta[958]*z_init[39]-theta[959]*z_init[40]-theta[960]*z_init[41]-theta[961]*z_init[42]-theta[962]*z_init[43]-theta[963]*z_init[44]-theta[964]*z_init[45]-theta[965]*z_init[46]-theta[966]*z_init[47]-theta[967]*z_init[48]-theta[968]*z_init[49]-theta[969]*z_init[50] )) * z_init[19]; // Competitor 1
    dydt[20] = ( exp(theta[970]-theta[971]*z_init[1]-theta[972]*z_init[2]-theta[973]*z_init[3]-theta[974]*z_init[4]-theta[975]*z_init[5]-theta[976]*z_init[6]-theta[977]*z_init[7]-theta[978]*z_init[8]-theta[979]*z_init[9]-theta[980]*z_init[10]-theta[981]*z_init[11]-theta[982]*z_init[12]-theta[983]*z_init[13]-theta[984]*z_init[14]-theta[985]*z_init[15]-theta[986]*z_init[16]-theta[987]*z_init[17]-theta[988]*z_init[18]-theta[989]*z_init[19]-theta[990]*z_init[20]-theta[991]*z_init[21]-theta[992]*z_init[22]-theta[993]*z_init[23]-theta[994]*z_init[24]-theta[995]*z_init[25]-theta[996]*z_init[26]-theta[997]*z_init[27]-theta[998]*z_init[28]-theta[999]*z_init[29]-theta[1000]*z_init[30]-theta[1001]*z_init[31]-theta[1002]*z_init[32]-theta[1003]*z_init[33]-theta[1004]*z_init[34]-theta[1005]*z_init[35]-theta[1006]*z_init[36]-theta[1007]*z_init[37]-theta[1008]*z_init[38]-theta[1009]*z_init[39]-theta[1010]*z_init[40]-theta[1011]*z_init[41]-theta[1012]*z_init[42]-theta[1013]*z_init[43]-theta[1014]*z_init[44]-theta[1015]*z_init[45]-theta[1016]*z_init[46]-theta[1017]*z_init[47]-theta[1018]*z_init[48]-theta[1019]*z_init[49]-theta[1020]*z_init[50])) * z_init[20]; // Competitor 2
    dydt[21] = ( exp(theta[1021]-theta[1022]*z_init[1]-theta[1023]*z_init[2]-theta[1024]*z_init[3]-theta[1025]*z_init[4]-theta[1026]*z_init[5]-theta[1027]*z_init[6]-theta[1028]*z_init[7]-theta[1029]*z_init[8]-theta[1030]*z_init[9]-theta[1031]*z_init[10]-theta[1032]*z_init[11]-theta[1033]*z_init[12]-theta[1034]*z_init[13]-theta[1035]*z_init[14]-theta[1036]*z_init[15]-theta[1037]*z_init[16]-theta[1038]*z_init[17]-theta[1039]*z_init[18]-theta[1040]*z_init[19]-theta[1041]*z_init[20]-theta[1042]*z_init[21]-theta[1043]*z_init[22]-theta[1044]*z_init[23]-theta[1045]*z_init[24]-theta[1046]*z_init[25]-theta[1047]*z_init[26]-theta[1048]*z_init[27]-theta[1049]*z_init[28]-theta[1050]*z_init[29]-theta[1051]*z_init[30]-theta[1052]*z_init[31]-theta[1053]*z_init[32]-theta[1054]*z_init[33]-theta[1055]*z_init[34]-theta[1056]*z_init[35]-theta[1057]*z_init[36]-theta[1058]*z_init[37]-theta[1059]*z_init[38]-theta[1060]*z_init[39]-theta[1061]*z_init[40]-theta[1062]*z_init[41]-theta[1063]*z_init[42]-theta[1064]*z_init[43]-theta[1065]*z_init[44]-theta[1066]*z_init[45]-theta[1067]*z_init[46]-theta[1068]*z_init[47]-theta[1069]*z_init[48]-theta[1070]*z_init[49]-theta[1071]*z_init[50] )) * z_init[21]; // Competitor 1
    dydt[22] = ( exp(theta[1072]-theta[1073]*z_init[1]-theta[1074]*z_init[2]-theta[1075]*z_init[3]-theta[1076]*z_init[4]-theta[1077]*z_init[5]-theta[1078]*z_init[6]-theta[1079]*z_init[7]-theta[1080]*z_init[8]-theta[1081]*z_init[9]-theta[1082]*z_init[10]-theta[1083]*z_init[11]-theta[1084]*z_init[12]-theta[1085]*z_init[13]-theta[1086]*z_init[14]-theta[1087]*z_init[15]-theta[1088]*z_init[16]-theta[1089]*z_init[17]-theta[1090]*z_init[18]-theta[1091]*z_init[19]-theta[1092]*z_init[20]-theta[1093]*z_init[21]-theta[1094]*z_init[22]-theta[1095]*z_init[23]-theta[1096]*z_init[24]-theta[1097]*z_init[25]-theta[1098]*z_init[26]-theta[1099]*z_init[27]-theta[1100]*z_init[28]-theta[1101]*z_init[29]-theta[1102]*z_init[30]-theta[1103]*z_init[31]-theta[1104]*z_init[32]-theta[1105]*z_init[33]-theta[1106]*z_init[34]-theta[1107]*z_init[35]-theta[1108]*z_init[36]-theta[1109]*z_init[37]-theta[1110]*z_init[38]-theta[1111]*z_init[39]-theta[1112]*z_init[40]-theta[1113]*z_init[41]-theta[1114]*z_init[42]-theta[1115]*z_init[43]-theta[1116]*z_init[44]-theta[1117]*z_init[45]-theta[1118]*z_init[46]-theta[1119]*z_init[47]-theta[1120]*z_init[48]-theta[1121]*z_init[49]-theta[1122]*z_init[50])) * z_init[22]; // Competitor 2
    dydt[23] = ( exp(theta[1123]-theta[1124]*z_init[1]-theta[1125]*z_init[2]-theta[1126]*z_init[3]-theta[1127]*z_init[4]-theta[1128]*z_init[5]-theta[1129]*z_init[6]-theta[1130]*z_init[7]-theta[1131]*z_init[8]-theta[1132]*z_init[9]-theta[1133]*z_init[10]-theta[1134]*z_init[11]-theta[1135]*z_init[12]-theta[1136]*z_init[13]-theta[1137]*z_init[14]-theta[1138]*z_init[15]-theta[1139]*z_init[16]-theta[1140]*z_init[17]-theta[1141]*z_init[18]-theta[1142]*z_init[19]-theta[1143]*z_init[20]-theta[1144]*z_init[21]-theta[1145]*z_init[22]-theta[1146]*z_init[23]-theta[1147]*z_init[24]-theta[1148]*z_init[25]-theta[1149]*z_init[26]-theta[1150]*z_init[27]-theta[1151]*z_init[28]-theta[1152]*z_init[29]-theta[1153]*z_init[30]-theta[1154]*z_init[31]-theta[1155]*z_init[32]-theta[1156]*z_init[33]-theta[1157]*z_init[34]-theta[1158]*z_init[35]-theta[1159]*z_init[36]-theta[1160]*z_init[37]-theta[1161]*z_init[38]-theta[1162]*z_init[39]-theta[1163]*z_init[40]-theta[1164]*z_init[41]-theta[1165]*z_init[42]-theta[1166]*z_init[43]-theta[1167]*z_init[44]-theta[1168]*z_init[45]-theta[1169]*z_init[46]-theta[1170]*z_init[47]-theta[1171]*z_init[48]-theta[1172]*z_init[49]-theta[1173]*z_init[50] )) * z_init[23]; // Competitor 1
    dydt[24] = ( exp(theta[1174]-theta[1175]*z_init[1]-theta[1176]*z_init[2]-theta[1177]*z_init[3]-theta[1178]*z_init[4]-theta[1179]*z_init[5]-theta[1180]*z_init[6]-theta[1181]*z_init[7]-theta[1182]*z_init[8]-theta[1183]*z_init[9]-theta[1184]*z_init[10]-theta[1185]*z_init[11]-theta[1186]*z_init[12]-theta[1187]*z_init[13]-theta[1188]*z_init[14]-theta[1189]*z_init[15]-theta[1190]*z_init[16]-theta[1191]*z_init[17]-theta[1192]*z_init[18]-theta[1193]*z_init[19]-theta[1194]*z_init[20]-theta[1195]*z_init[21]-theta[1196]*z_init[22]-theta[1197]*z_init[23]-theta[1198]*z_init[24]-theta[1199]*z_init[25]-theta[1200]*z_init[26]-theta[1201]*z_init[27]-theta[1202]*z_init[28]-theta[1203]*z_init[29]-theta[1204]*z_init[30]-theta[1205]*z_init[31]-theta[1206]*z_init[32]-theta[1207]*z_init[33]-theta[1208]*z_init[34]-theta[1209]*z_init[35]-theta[1210]*z_init[36]-theta[1211]*z_init[37]-theta[1212]*z_init[38]-theta[1213]*z_init[39]-theta[1214]*z_init[40]-theta[1215]*z_init[41]-theta[1216]*z_init[42]-theta[1217]*z_init[43]-theta[1218]*z_init[44]-theta[1219]*z_init[45]-theta[1220]*z_init[46]-theta[1221]*z_init[47]-theta[1222]*z_init[48]-theta[1223]*z_init[49]-theta[1224]*z_init[50])) * z_init[24]; // Competitor 2
    dydt[25] = ( exp(theta[1225]-theta[1226]*z_init[1]-theta[1227]*z_init[2]-theta[1228]*z_init[3]-theta[1229]*z_init[4]-theta[1230]*z_init[5]-theta[1231]*z_init[6]-theta[1232]*z_init[7]-theta[1233]*z_init[8]-theta[1234]*z_init[9]-theta[1235]*z_init[10]-theta[1236]*z_init[11]-theta[1237]*z_init[12]-theta[1238]*z_init[13]-theta[1239]*z_init[14]-theta[1240]*z_init[15]-theta[1241]*z_init[16]-theta[1242]*z_init[17]-theta[1243]*z_init[18]-theta[1244]*z_init[19]-theta[1245]*z_init[20]-theta[1246]*z_init[21]-theta[1247]*z_init[22]-theta[1248]*z_init[23]-theta[1249]*z_init[24]-theta[1250]*z_init[25]-theta[1251]*z_init[26]-theta[1252]*z_init[27]-theta[1253]*z_init[28]-theta[1254]*z_init[29]-theta[1255]*z_init[30]-theta[1256]*z_init[31]-theta[1257]*z_init[32]-theta[1258]*z_init[33]-theta[1259]*z_init[34]-theta[1260]*z_init[35]-theta[1261]*z_init[36]-theta[1262]*z_init[37]-theta[1263]*z_init[38]-theta[1264]*z_init[39]-theta[1265]*z_init[40]-theta[1266]*z_init[41]-theta[1267]*z_init[42]-theta[1268]*z_init[43]-theta[1269]*z_init[44]-theta[1270]*z_init[45]-theta[1271]*z_init[46]-theta[1272]*z_init[47]-theta[1273]*z_init[48]-theta[1274]*z_init[49]-theta[1275]*z_init[50] )) * z_init[25]; // Competitor 1
    dydt[26] = ( exp(theta[1276]-theta[1277]*z_init[1]-theta[1278]*z_init[2]-theta[1279]*z_init[3]-theta[1280]*z_init[4]-theta[1281]*z_init[5]-theta[1282]*z_init[6]-theta[1283]*z_init[7]-theta[1284]*z_init[8]-theta[1285]*z_init[9]-theta[1286]*z_init[10]-theta[1287]*z_init[11]-theta[1288]*z_init[12]-theta[1289]*z_init[13]-theta[1290]*z_init[14]-theta[1291]*z_init[15]-theta[1292]*z_init[16]-theta[1293]*z_init[17]-theta[1294]*z_init[18]-theta[1295]*z_init[19]-theta[1296]*z_init[20]-theta[1297]*z_init[21]-theta[1298]*z_init[22]-theta[1299]*z_init[23]-theta[1300]*z_init[24]-theta[1301]*z_init[25]-theta[1302]*z_init[26]-theta[1303]*z_init[27]-theta[1304]*z_init[28]-theta[1305]*z_init[29]-theta[1306]*z_init[30]-theta[1307]*z_init[31]-theta[1308]*z_init[32]-theta[1309]*z_init[33]-theta[1310]*z_init[34]-theta[1311]*z_init[35]-theta[1312]*z_init[36]-theta[1313]*z_init[37]-theta[1314]*z_init[38]-theta[1315]*z_init[39]-theta[1316]*z_init[40]-theta[1317]*z_init[41]-theta[1318]*z_init[42]-theta[1319]*z_init[43]-theta[1320]*z_init[44]-theta[1321]*z_init[45]-theta[1322]*z_init[46]-theta[1323]*z_init[47]-theta[1324]*z_init[48]-theta[1325]*z_init[49]-theta[1326]*z_init[50])) * z_init[26]; // Competitor 2
    dydt[27] = ( exp(theta[1327]-theta[1328]*z_init[1]-theta[1329]*z_init[2]-theta[1330]*z_init[3]-theta[1331]*z_init[4]-theta[1332]*z_init[5]-theta[1333]*z_init[6]-theta[1334]*z_init[7]-theta[1335]*z_init[8]-theta[1336]*z_init[9]-theta[1337]*z_init[10]-theta[1338]*z_init[11]-theta[1339]*z_init[12]-theta[1340]*z_init[13]-theta[1341]*z_init[14]-theta[1342]*z_init[15]-theta[1343]*z_init[16]-theta[1344]*z_init[17]-theta[1345]*z_init[18]-theta[1346]*z_init[19]-theta[1347]*z_init[20]-theta[1348]*z_init[21]-theta[1349]*z_init[22]-theta[1350]*z_init[23]-theta[1351]*z_init[24]-theta[1352]*z_init[25]-theta[1353]*z_init[26]-theta[1354]*z_init[27]-theta[1355]*z_init[28]-theta[1356]*z_init[29]-theta[1357]*z_init[30]-theta[1358]*z_init[31]-theta[1359]*z_init[32]-theta[1360]*z_init[33]-theta[1361]*z_init[34]-theta[1362]*z_init[35]-theta[1363]*z_init[36]-theta[1364]*z_init[37]-theta[1365]*z_init[38]-theta[1366]*z_init[39]-theta[1367]*z_init[40]-theta[1368]*z_init[41]-theta[1369]*z_init[42]-theta[1370]*z_init[43]-theta[1371]*z_init[44]-theta[1372]*z_init[45]-theta[1373]*z_init[46]-theta[1374]*z_init[47]-theta[1375]*z_init[48]-theta[1376]*z_init[49]-theta[1377]*z_init[50] )) * z_init[27]; // Competitor 1
    dydt[28] = ( exp(theta[1378]-theta[1379]*z_init[1]-theta[1380]*z_init[2]-theta[1381]*z_init[3]-theta[1382]*z_init[4]-theta[1383]*z_init[5]-theta[1384]*z_init[6]-theta[1385]*z_init[7]-theta[1386]*z_init[8]-theta[1387]*z_init[9]-theta[1388]*z_init[10]-theta[1389]*z_init[11]-theta[1390]*z_init[12]-theta[1391]*z_init[13]-theta[1392]*z_init[14]-theta[1393]*z_init[15]-theta[1394]*z_init[16]-theta[1395]*z_init[17]-theta[1396]*z_init[18]-theta[1397]*z_init[19]-theta[1398]*z_init[20]-theta[1399]*z_init[21]-theta[1400]*z_init[22]-theta[1401]*z_init[23]-theta[1402]*z_init[24]-theta[1403]*z_init[25]-theta[1404]*z_init[26]-theta[1405]*z_init[27]-theta[1406]*z_init[28]-theta[1407]*z_init[29]-theta[1408]*z_init[30]-theta[1409]*z_init[31]-theta[1410]*z_init[32]-theta[1411]*z_init[33]-theta[1412]*z_init[34]-theta[1413]*z_init[35]-theta[1414]*z_init[36]-theta[1415]*z_init[37]-theta[1416]*z_init[38]-theta[1417]*z_init[39]-theta[1418]*z_init[40]-theta[1419]*z_init[41]-theta[1420]*z_init[42]-theta[1421]*z_init[43]-theta[1422]*z_init[44]-theta[1423]*z_init[45]-theta[1424]*z_init[46]-theta[1425]*z_init[47]-theta[1426]*z_init[48]-theta[1427]*z_init[49]-theta[1428]*z_init[50])) * z_init[28]; // Competitor 2
    dydt[29] = ( exp(theta[1429]-theta[1430]*z_init[1]-theta[1431]*z_init[2]-theta[1432]*z_init[3]-theta[1433]*z_init[4]-theta[1434]*z_init[5]-theta[1435]*z_init[6]-theta[1436]*z_init[7]-theta[1437]*z_init[8]-theta[1438]*z_init[9]-theta[1439]*z_init[10]-theta[1440]*z_init[11]-theta[1441]*z_init[12]-theta[1442]*z_init[13]-theta[1443]*z_init[14]-theta[1444]*z_init[15]-theta[1445]*z_init[16]-theta[1446]*z_init[17]-theta[1447]*z_init[18]-theta[1448]*z_init[19]-theta[1449]*z_init[20]-theta[1450]*z_init[21]-theta[1451]*z_init[22]-theta[1452]*z_init[23]-theta[1453]*z_init[24]-theta[1454]*z_init[25]-theta[1455]*z_init[26]-theta[1456]*z_init[27]-theta[1457]*z_init[28]-theta[1458]*z_init[29]-theta[1459]*z_init[30]-theta[1460]*z_init[31]-theta[1461]*z_init[32]-theta[1462]*z_init[33]-theta[1463]*z_init[34]-theta[1464]*z_init[35]-theta[1465]*z_init[36]-theta[1466]*z_init[37]-theta[1467]*z_init[38]-theta[1468]*z_init[39]-theta[1469]*z_init[40]-theta[1470]*z_init[41]-theta[1471]*z_init[42]-theta[1472]*z_init[43]-theta[1473]*z_init[44]-theta[1474]*z_init[45]-theta[1475]*z_init[46]-theta[1476]*z_init[47]-theta[1477]*z_init[48]-theta[1478]*z_init[49]-theta[1479]*z_init[50] )) * z_init[29]; // Competitor 1
    dydt[30] = ( exp(theta[1480]-theta[1481]*z_init[1]-theta[1482]*z_init[2]-theta[1483]*z_init[3]-theta[1484]*z_init[4]-theta[1485]*z_init[5]-theta[1486]*z_init[6]-theta[1487]*z_init[7]-theta[1488]*z_init[8]-theta[1489]*z_init[9]-theta[1490]*z_init[10]-theta[1491]*z_init[11]-theta[1492]*z_init[12]-theta[1493]*z_init[13]-theta[1494]*z_init[14]-theta[1495]*z_init[15]-theta[1496]*z_init[16]-theta[1497]*z_init[17]-theta[1498]*z_init[18]-theta[1499]*z_init[19]-theta[1500]*z_init[20]-theta[1501]*z_init[21]-theta[1502]*z_init[22]-theta[1503]*z_init[23]-theta[1504]*z_init[24]-theta[1505]*z_init[25]-theta[1506]*z_init[26]-theta[1507]*z_init[27]-theta[1508]*z_init[28]-theta[1509]*z_init[29]-theta[1510]*z_init[30]-theta[1511]*z_init[31]-theta[1512]*z_init[32]-theta[1513]*z_init[33]-theta[1514]*z_init[34]-theta[1515]*z_init[35]-theta[1516]*z_init[36]-theta[1517]*z_init[37]-theta[1518]*z_init[38]-theta[1519]*z_init[39]-theta[1520]*z_init[40]-theta[1521]*z_init[41]-theta[1522]*z_init[42]-theta[1523]*z_init[43]-theta[1524]*z_init[44]-theta[1525]*z_init[45]-theta[1526]*z_init[46]-theta[1527]*z_init[47]-theta[1528]*z_init[48]-theta[1529]*z_init[49]-theta[1530]*z_init[50])) * z_init[30]; // Competitor 2
    dydt[31] = ( exp(theta[1531]-theta[1532]*z_init[1]-theta[1533]*z_init[2]-theta[1534]*z_init[3]-theta[1535]*z_init[4]-theta[1536]*z_init[5]-theta[1537]*z_init[6]-theta[1538]*z_init[7]-theta[1539]*z_init[8]-theta[1540]*z_init[9]-theta[1541]*z_init[10]-theta[1542]*z_init[11]-theta[1543]*z_init[12]-theta[1544]*z_init[13]-theta[1545]*z_init[14]-theta[1546]*z_init[15]-theta[1547]*z_init[16]-theta[1548]*z_init[17]-theta[1549]*z_init[18]-theta[1550]*z_init[19]-theta[1551]*z_init[20]-theta[1552]*z_init[21]-theta[1553]*z_init[22]-theta[1554]*z_init[23]-theta[1555]*z_init[24]-theta[1556]*z_init[25]-theta[1557]*z_init[26]-theta[1558]*z_init[27]-theta[1559]*z_init[28]-theta[1560]*z_init[29]-theta[1561]*z_init[30]-theta[1562]*z_init[31]-theta[1563]*z_init[32]-theta[1564]*z_init[33]-theta[1565]*z_init[34]-theta[1566]*z_init[35]-theta[1567]*z_init[36]-theta[1568]*z_init[37]-theta[1569]*z_init[38]-theta[1570]*z_init[39]-theta[1571]*z_init[40]-theta[1572]*z_init[41]-theta[1573]*z_init[42]-theta[1574]*z_init[43]-theta[1575]*z_init[44]-theta[1576]*z_init[45]-theta[1577]*z_init[46]-theta[1578]*z_init[47]-theta[1579]*z_init[48]-theta[1580]*z_init[49]-theta[1581]*z_init[50] )) * z_init[31]; // Competitor 1
    dydt[32] = ( exp(theta[1582]-theta[1583]*z_init[1]-theta[1584]*z_init[2]-theta[1585]*z_init[3]-theta[1586]*z_init[4]-theta[1587]*z_init[5]-theta[1588]*z_init[6]-theta[1589]*z_init[7]-theta[1590]*z_init[8]-theta[1591]*z_init[9]-theta[1592]*z_init[10]-theta[1593]*z_init[11]-theta[1594]*z_init[12]-theta[1595]*z_init[13]-theta[1596]*z_init[14]-theta[1597]*z_init[15]-theta[1598]*z_init[16]-theta[1599]*z_init[17]-theta[1600]*z_init[18]-theta[1601]*z_init[19]-theta[1602]*z_init[20]-theta[1603]*z_init[21]-theta[1604]*z_init[22]-theta[1605]*z_init[23]-theta[1606]*z_init[24]-theta[1607]*z_init[25]-theta[1608]*z_init[26]-theta[1609]*z_init[27]-theta[1610]*z_init[28]-theta[1611]*z_init[29]-theta[1612]*z_init[30]-theta[1613]*z_init[31]-theta[1614]*z_init[32]-theta[1615]*z_init[33]-theta[1616]*z_init[34]-theta[1617]*z_init[35]-theta[1618]*z_init[36]-theta[1619]*z_init[37]-theta[1620]*z_init[38]-theta[1621]*z_init[39]-theta[1622]*z_init[40]-theta[1623]*z_init[41]-theta[1624]*z_init[42]-theta[1625]*z_init[43]-theta[1626]*z_init[44]-theta[1627]*z_init[45]-theta[1628]*z_init[46]-theta[1629]*z_init[47]-theta[1630]*z_init[48]-theta[1631]*z_init[49]-theta[1632]*z_init[50])) * z_init[32]; // Competitor 2
    dydt[33] = ( exp(theta[1633]-theta[1634]*z_init[1]-theta[1635]*z_init[2]-theta[1636]*z_init[3]-theta[1637]*z_init[4]-theta[1638]*z_init[5]-theta[1639]*z_init[6]-theta[1640]*z_init[7]-theta[1641]*z_init[8]-theta[1642]*z_init[9]-theta[1643]*z_init[10]-theta[1644]*z_init[11]-theta[1645]*z_init[12]-theta[1646]*z_init[13]-theta[1647]*z_init[14]-theta[1648]*z_init[15]-theta[1649]*z_init[16]-theta[1650]*z_init[17]-theta[1651]*z_init[18]-theta[1652]*z_init[19]-theta[1653]*z_init[20]-theta[1654]*z_init[21]-theta[1655]*z_init[22]-theta[1656]*z_init[23]-theta[1657]*z_init[24]-theta[1658]*z_init[25]-theta[1659]*z_init[26]-theta[1660]*z_init[27]-theta[1661]*z_init[28]-theta[1662]*z_init[29]-theta[1663]*z_init[30]-theta[1664]*z_init[31]-theta[1665]*z_init[32]-theta[1666]*z_init[33]-theta[1667]*z_init[34]-theta[1668]*z_init[35]-theta[1669]*z_init[36]-theta[1670]*z_init[37]-theta[1671]*z_init[38]-theta[1672]*z_init[39]-theta[1673]*z_init[40]-theta[1674]*z_init[41]-theta[1675]*z_init[42]-theta[1676]*z_init[43]-theta[1677]*z_init[44]-theta[1678]*z_init[45]-theta[1679]*z_init[46]-theta[1680]*z_init[47]-theta[1681]*z_init[48]-theta[1682]*z_init[49]-theta[1683]*z_init[50] )) * z_init[33]; // Competitor 1
    dydt[34] = ( exp(theta[1684]-theta[1685]*z_init[1]-theta[1686]*z_init[2]-theta[1687]*z_init[3]-theta[1688]*z_init[4]-theta[1689]*z_init[5]-theta[1690]*z_init[6]-theta[1691]*z_init[7]-theta[1692]*z_init[8]-theta[1693]*z_init[9]-theta[1694]*z_init[10]-theta[1695]*z_init[11]-theta[1696]*z_init[12]-theta[1697]*z_init[13]-theta[1698]*z_init[14]-theta[1699]*z_init[15]-theta[1700]*z_init[16]-theta[1701]*z_init[17]-theta[1702]*z_init[18]-theta[1703]*z_init[19]-theta[1704]*z_init[20]-theta[1705]*z_init[21]-theta[1706]*z_init[22]-theta[1707]*z_init[23]-theta[1708]*z_init[24]-theta[1709]*z_init[25]-theta[1710]*z_init[26]-theta[1711]*z_init[27]-theta[1712]*z_init[28]-theta[1713]*z_init[29]-theta[1714]*z_init[30]-theta[1715]*z_init[31]-theta[1716]*z_init[32]-theta[1717]*z_init[33]-theta[1718]*z_init[34]-theta[1719]*z_init[35]-theta[1720]*z_init[36]-theta[1721]*z_init[37]-theta[1722]*z_init[38]-theta[1723]*z_init[39]-theta[1724]*z_init[40]-theta[1725]*z_init[41]-theta[1726]*z_init[42]-theta[1727]*z_init[43]-theta[1728]*z_init[44]-theta[1729]*z_init[45]-theta[1730]*z_init[46]-theta[1731]*z_init[47]-theta[1732]*z_init[48]-theta[1733]*z_init[49]-theta[1734]*z_init[50])) * z_init[34]; // Competitor 2
    dydt[35] = ( exp(theta[1735]-theta[1736]*z_init[1]-theta[1737]*z_init[2]-theta[1738]*z_init[3]-theta[1739]*z_init[4]-theta[1740]*z_init[5]-theta[1741]*z_init[6]-theta[1742]*z_init[7]-theta[1743]*z_init[8]-theta[1744]*z_init[9]-theta[1745]*z_init[10]-theta[1746]*z_init[11]-theta[1747]*z_init[12]-theta[1748]*z_init[13]-theta[1749]*z_init[14]-theta[1750]*z_init[15]-theta[1751]*z_init[16]-theta[1752]*z_init[17]-theta[1753]*z_init[18]-theta[1754]*z_init[19]-theta[1755]*z_init[20]-theta[1756]*z_init[21]-theta[1757]*z_init[22]-theta[1758]*z_init[23]-theta[1759]*z_init[24]-theta[1760]*z_init[25]-theta[1761]*z_init[26]-theta[1762]*z_init[27]-theta[1763]*z_init[28]-theta[1764]*z_init[29]-theta[1765]*z_init[30]-theta[1766]*z_init[31]-theta[1767]*z_init[32]-theta[1768]*z_init[33]-theta[1769]*z_init[34]-theta[1770]*z_init[35]-theta[1771]*z_init[36]-theta[1772]*z_init[37]-theta[1773]*z_init[38]-theta[1774]*z_init[39]-theta[1775]*z_init[40]-theta[1776]*z_init[41]-theta[1777]*z_init[42]-theta[1778]*z_init[43]-theta[1779]*z_init[44]-theta[1780]*z_init[45]-theta[1781]*z_init[46]-theta[1782]*z_init[47]-theta[1783]*z_init[48]-theta[1784]*z_init[49]-theta[1785]*z_init[50] )) * z_init[35]; // Competitor 1
    dydt[36] = ( exp(theta[1786]-theta[1787]*z_init[1]-theta[1788]*z_init[2]-theta[1789]*z_init[3]-theta[1790]*z_init[4]-theta[1791]*z_init[5]-theta[1792]*z_init[6]-theta[1793]*z_init[7]-theta[1794]*z_init[8]-theta[1795]*z_init[9]-theta[1796]*z_init[10]-theta[1797]*z_init[11]-theta[1798]*z_init[12]-theta[1799]*z_init[13]-theta[1800]*z_init[14]-theta[1801]*z_init[15]-theta[1802]*z_init[16]-theta[1803]*z_init[17]-theta[1804]*z_init[18]-theta[1805]*z_init[19]-theta[1806]*z_init[20]-theta[1807]*z_init[21]-theta[1808]*z_init[22]-theta[1809]*z_init[23]-theta[1810]*z_init[24]-theta[1811]*z_init[25]-theta[1812]*z_init[26]-theta[1813]*z_init[27]-theta[1814]*z_init[28]-theta[1815]*z_init[29]-theta[1816]*z_init[30]-theta[1817]*z_init[31]-theta[1818]*z_init[32]-theta[1819]*z_init[33]-theta[1820]*z_init[34]-theta[1821]*z_init[35]-theta[1822]*z_init[36]-theta[1823]*z_init[37]-theta[1824]*z_init[38]-theta[1825]*z_init[39]-theta[1826]*z_init[40]-theta[1827]*z_init[41]-theta[1828]*z_init[42]-theta[1829]*z_init[43]-theta[1830]*z_init[44]-theta[1831]*z_init[45]-theta[1832]*z_init[46]-theta[1833]*z_init[47]-theta[1834]*z_init[48]-theta[1835]*z_init[49]-theta[1836]*z_init[50])) * z_init[36]; // Competitor 2
    dydt[37] = ( exp(theta[1837]-theta[1838]*z_init[1]-theta[1839]*z_init[2]-theta[1840]*z_init[3]-theta[1841]*z_init[4]-theta[1842]*z_init[5]-theta[1843]*z_init[6]-theta[1844]*z_init[7]-theta[1845]*z_init[8]-theta[1846]*z_init[9]-theta[1847]*z_init[10]-theta[1848]*z_init[11]-theta[1849]*z_init[12]-theta[1850]*z_init[13]-theta[1851]*z_init[14]-theta[1852]*z_init[15]-theta[1853]*z_init[16]-theta[1854]*z_init[17]-theta[1855]*z_init[18]-theta[1856]*z_init[19]-theta[1857]*z_init[20]-theta[1858]*z_init[21]-theta[1859]*z_init[22]-theta[1860]*z_init[23]-theta[1861]*z_init[24]-theta[1862]*z_init[25]-theta[1863]*z_init[26]-theta[1864]*z_init[27]-theta[1865]*z_init[28]-theta[1866]*z_init[29]-theta[1867]*z_init[30]-theta[1868]*z_init[31]-theta[1869]*z_init[32]-theta[1870]*z_init[33]-theta[1871]*z_init[34]-theta[1872]*z_init[35]-theta[1873]*z_init[36]-theta[1874]*z_init[37]-theta[1875]*z_init[38]-theta[1876]*z_init[39]-theta[1877]*z_init[40]-theta[1878]*z_init[41]-theta[1879]*z_init[42]-theta[1880]*z_init[43]-theta[1881]*z_init[44]-theta[1882]*z_init[45]-theta[1883]*z_init[46]-theta[1884]*z_init[47]-theta[1885]*z_init[48]-theta[1886]*z_init[49]-theta[1887]*z_init[50] )) * z_init[37]; // Competitor 1
    dydt[38] = ( exp(theta[1888]-theta[1889]*z_init[1]-theta[1890]*z_init[2]-theta[1891]*z_init[3]-theta[1892]*z_init[4]-theta[1893]*z_init[5]-theta[1894]*z_init[6]-theta[1895]*z_init[7]-theta[1896]*z_init[8]-theta[1897]*z_init[9]-theta[1898]*z_init[10]-theta[1899]*z_init[11]-theta[1900]*z_init[12]-theta[1901]*z_init[13]-theta[1902]*z_init[14]-theta[1903]*z_init[15]-theta[1904]*z_init[16]-theta[1905]*z_init[17]-theta[1906]*z_init[18]-theta[1907]*z_init[19]-theta[1908]*z_init[20]-theta[1909]*z_init[21]-theta[1910]*z_init[22]-theta[1911]*z_init[23]-theta[1912]*z_init[24]-theta[1913]*z_init[25]-theta[1914]*z_init[26]-theta[1915]*z_init[27]-theta[1916]*z_init[28]-theta[1917]*z_init[29]-theta[1918]*z_init[30]-theta[1919]*z_init[31]-theta[1920]*z_init[32]-theta[1921]*z_init[33]-theta[1922]*z_init[34]-theta[1923]*z_init[35]-theta[1924]*z_init[36]-theta[1925]*z_init[37]-theta[1926]*z_init[38]-theta[1927]*z_init[39]-theta[1928]*z_init[40]-theta[1929]*z_init[41]-theta[1930]*z_init[42]-theta[1931]*z_init[43]-theta[1932]*z_init[44]-theta[1933]*z_init[45]-theta[1934]*z_init[46]-theta[1935]*z_init[47]-theta[1936]*z_init[48]-theta[1937]*z_init[49]-theta[1938]*z_init[50])) * z_init[38]; // Competitor 2
    dydt[39] = ( exp(theta[1939]-theta[1940]*z_init[1]-theta[1941]*z_init[2]-theta[1942]*z_init[3]-theta[1943]*z_init[4]-theta[1944]*z_init[5]-theta[1945]*z_init[6]-theta[1946]*z_init[7]-theta[1947]*z_init[8]-theta[1948]*z_init[9]-theta[1949]*z_init[10]-theta[1950]*z_init[11]-theta[1951]*z_init[12]-theta[1952]*z_init[13]-theta[1953]*z_init[14]-theta[1954]*z_init[15]-theta[1955]*z_init[16]-theta[1956]*z_init[17]-theta[1957]*z_init[18]-theta[1958]*z_init[19]-theta[1959]*z_init[20]-theta[1960]*z_init[21]-theta[1961]*z_init[22]-theta[1962]*z_init[23]-theta[1963]*z_init[24]-theta[1964]*z_init[25]-theta[1965]*z_init[26]-theta[1966]*z_init[27]-theta[1967]*z_init[28]-theta[1968]*z_init[29]-theta[1969]*z_init[30]-theta[1970]*z_init[31]-theta[1971]*z_init[32]-theta[1972]*z_init[33]-theta[1973]*z_init[34]-theta[1974]*z_init[35]-theta[1975]*z_init[36]-theta[1976]*z_init[37]-theta[1977]*z_init[38]-theta[1978]*z_init[39]-theta[1979]*z_init[40]-theta[1980]*z_init[41]-theta[1981]*z_init[42]-theta[1982]*z_init[43]-theta[1983]*z_init[44]-theta[1984]*z_init[45]-theta[1985]*z_init[46]-theta[1986]*z_init[47]-theta[1987]*z_init[48]-theta[1988]*z_init[49]-theta[1989]*z_init[50] )) * z_init[39]; // Competitor 1
    dydt[40] = ( exp(theta[1990]-theta[1991]*z_init[1]-theta[1992]*z_init[2]-theta[1993]*z_init[3]-theta[1994]*z_init[4]-theta[1995]*z_init[5]-theta[1996]*z_init[6]-theta[1997]*z_init[7]-theta[1998]*z_init[8]-theta[1999]*z_init[9]-theta[2000]*z_init[10]-theta[2001]*z_init[11]-theta[2002]*z_init[12]-theta[2003]*z_init[13]-theta[2004]*z_init[14]-theta[2005]*z_init[15]-theta[2006]*z_init[16]-theta[2007]*z_init[17]-theta[2008]*z_init[18]-theta[2009]*z_init[19]-theta[2010]*z_init[20]-theta[2011]*z_init[21]-theta[2012]*z_init[22]-theta[2013]*z_init[23]-theta[2014]*z_init[24]-theta[2015]*z_init[25]-theta[2016]*z_init[26]-theta[2017]*z_init[27]-theta[2018]*z_init[28]-theta[2019]*z_init[29]-theta[2020]*z_init[30]-theta[2021]*z_init[31]-theta[2022]*z_init[32]-theta[2023]*z_init[33]-theta[2024]*z_init[34]-theta[2025]*z_init[35]-theta[2026]*z_init[36]-theta[2027]*z_init[37]-theta[2028]*z_init[38]-theta[2029]*z_init[39]-theta[2030]*z_init[40]-theta[2031]*z_init[41]-theta[2032]*z_init[42]-theta[2033]*z_init[43]-theta[2034]*z_init[44]-theta[2035]*z_init[45]-theta[2036]*z_init[46]-theta[2037]*z_init[47]-theta[2038]*z_init[48]-theta[2039]*z_init[49]-theta[2040]*z_init[50])) * z_init[40]; // Competitor 2
    dydt[41] = ( exp(theta[2041]-theta[2042]*z_init[1]-theta[2043]*z_init[2]-theta[2044]*z_init[3]-theta[2045]*z_init[4]-theta[2046]*z_init[5]-theta[2047]*z_init[6]-theta[2048]*z_init[7]-theta[2049]*z_init[8]-theta[2050]*z_init[9]-theta[2051]*z_init[10]-theta[2052]*z_init[11]-theta[2053]*z_init[12]-theta[2054]*z_init[13]-theta[2055]*z_init[14]-theta[2056]*z_init[15]-theta[2057]*z_init[16]-theta[2058]*z_init[17]-theta[2059]*z_init[18]-theta[2060]*z_init[19]-theta[2061]*z_init[20]-theta[2062]*z_init[21]-theta[2063]*z_init[22]-theta[2064]*z_init[23]-theta[2065]*z_init[24]-theta[2066]*z_init[25]-theta[2067]*z_init[26]-theta[2068]*z_init[27]-theta[2069]*z_init[28]-theta[2070]*z_init[29]-theta[2071]*z_init[30]-theta[2072]*z_init[31]-theta[2073]*z_init[32]-theta[2074]*z_init[33]-theta[2075]*z_init[34]-theta[2076]*z_init[35]-theta[2077]*z_init[36]-theta[2078]*z_init[37]-theta[2079]*z_init[38]-theta[2080]*z_init[39]-theta[2081]*z_init[40]-theta[2082]*z_init[41]-theta[2083]*z_init[42]-theta[2084]*z_init[43]-theta[2085]*z_init[44]-theta[2086]*z_init[45]-theta[2087]*z_init[46]-theta[2088]*z_init[47]-theta[2089]*z_init[48]-theta[2090]*z_init[49]-theta[2091]*z_init[50] )) * z_init[41]; // Competitor 1
    dydt[42] = ( exp(theta[2092]-theta[2093]*z_init[1]-theta[2094]*z_init[2]-theta[2095]*z_init[3]-theta[2096]*z_init[4]-theta[2097]*z_init[5]-theta[2098]*z_init[6]-theta[2099]*z_init[7]-theta[2100]*z_init[8]-theta[2101]*z_init[9]-theta[2102]*z_init[10]-theta[2103]*z_init[11]-theta[2104]*z_init[12]-theta[2105]*z_init[13]-theta[2106]*z_init[14]-theta[2107]*z_init[15]-theta[2108]*z_init[16]-theta[2109]*z_init[17]-theta[2110]*z_init[18]-theta[2111]*z_init[19]-theta[2112]*z_init[20]-theta[2113]*z_init[21]-theta[2114]*z_init[22]-theta[2115]*z_init[23]-theta[2116]*z_init[24]-theta[2117]*z_init[25]-theta[2118]*z_init[26]-theta[2119]*z_init[27]-theta[2120]*z_init[28]-theta[2121]*z_init[29]-theta[2122]*z_init[30]-theta[2123]*z_init[31]-theta[2124]*z_init[32]-theta[2125]*z_init[33]-theta[2126]*z_init[34]-theta[2127]*z_init[35]-theta[2128]*z_init[36]-theta[2129]*z_init[37]-theta[2130]*z_init[38]-theta[2131]*z_init[39]-theta[2132]*z_init[40]-theta[2133]*z_init[41]-theta[2134]*z_init[42]-theta[2135]*z_init[43]-theta[2136]*z_init[44]-theta[2137]*z_init[45]-theta[2138]*z_init[46]-theta[2139]*z_init[47]-theta[2140]*z_init[48]-theta[2141]*z_init[49]-theta[2142]*z_init[50])) * z_init[42]; // Competitor 2
    dydt[43] = ( exp(theta[2143]-theta[2144]*z_init[1]-theta[2145]*z_init[2]-theta[2146]*z_init[3]-theta[2147]*z_init[4]-theta[2148]*z_init[5]-theta[2149]*z_init[6]-theta[2150]*z_init[7]-theta[2151]*z_init[8]-theta[2152]*z_init[9]-theta[2153]*z_init[10]-theta[2154]*z_init[11]-theta[2155]*z_init[12]-theta[2156]*z_init[13]-theta[2157]*z_init[14]-theta[2158]*z_init[15]-theta[2159]*z_init[16]-theta[2160]*z_init[17]-theta[2161]*z_init[18]-theta[2162]*z_init[19]-theta[2163]*z_init[20]-theta[2164]*z_init[21]-theta[2165]*z_init[22]-theta[2166]*z_init[23]-theta[2167]*z_init[24]-theta[2168]*z_init[25]-theta[2169]*z_init[26]-theta[2170]*z_init[27]-theta[2171]*z_init[28]-theta[2172]*z_init[29]-theta[2173]*z_init[30]-theta[2174]*z_init[31]-theta[2175]*z_init[32]-theta[2176]*z_init[33]-theta[2177]*z_init[34]-theta[2178]*z_init[35]-theta[2179]*z_init[36]-theta[2180]*z_init[37]-theta[2181]*z_init[38]-theta[2182]*z_init[39]-theta[2183]*z_init[40]-theta[2184]*z_init[41]-theta[2185]*z_init[42]-theta[2186]*z_init[43]-theta[2187]*z_init[44]-theta[2188]*z_init[45]-theta[2189]*z_init[46]-theta[2190]*z_init[47]-theta[2191]*z_init[48]-theta[2192]*z_init[49]-theta[2193]*z_init[50] )) * z_init[43]; // Competitor 1
    dydt[44] = ( exp(theta[2194]-theta[2195]*z_init[1]-theta[2196]*z_init[2]-theta[2197]*z_init[3]-theta[2198]*z_init[4]-theta[2199]*z_init[5]-theta[2200]*z_init[6]-theta[2201]*z_init[7]-theta[2202]*z_init[8]-theta[2203]*z_init[9]-theta[2204]*z_init[10]-theta[2205]*z_init[11]-theta[2206]*z_init[12]-theta[2207]*z_init[13]-theta[2208]*z_init[14]-theta[2209]*z_init[15]-theta[2210]*z_init[16]-theta[2211]*z_init[17]-theta[2212]*z_init[18]-theta[2213]*z_init[19]-theta[2214]*z_init[20]-theta[2215]*z_init[21]-theta[2216]*z_init[22]-theta[2217]*z_init[23]-theta[2218]*z_init[24]-theta[2219]*z_init[25]-theta[2220]*z_init[26]-theta[2221]*z_init[27]-theta[2222]*z_init[28]-theta[2223]*z_init[29]-theta[2224]*z_init[30]-theta[2225]*z_init[31]-theta[2226]*z_init[32]-theta[2227]*z_init[33]-theta[2228]*z_init[34]-theta[2229]*z_init[35]-theta[2230]*z_init[36]-theta[2231]*z_init[37]-theta[2232]*z_init[38]-theta[2233]*z_init[39]-theta[2234]*z_init[40]-theta[2235]*z_init[41]-theta[2236]*z_init[42]-theta[2237]*z_init[43]-theta[2238]*z_init[44]-theta[2239]*z_init[45]-theta[2240]*z_init[46]-theta[2241]*z_init[47]-theta[2242]*z_init[48]-theta[2243]*z_init[49]-theta[2244]*z_init[50])) * z_init[44]; // Competitor 2
    dydt[45] = ( exp(theta[2245]-theta[2246]*z_init[1]-theta[2247]*z_init[2]-theta[2248]*z_init[3]-theta[2249]*z_init[4]-theta[2250]*z_init[5]-theta[2251]*z_init[6]-theta[2252]*z_init[7]-theta[2253]*z_init[8]-theta[2254]*z_init[9]-theta[2255]*z_init[10]-theta[2256]*z_init[11]-theta[2257]*z_init[12]-theta[2258]*z_init[13]-theta[2259]*z_init[14]-theta[2260]*z_init[15]-theta[2261]*z_init[16]-theta[2262]*z_init[17]-theta[2263]*z_init[18]-theta[2264]*z_init[19]-theta[2265]*z_init[20]-theta[2266]*z_init[21]-theta[2267]*z_init[22]-theta[2268]*z_init[23]-theta[2269]*z_init[24]-theta[2270]*z_init[25]-theta[2271]*z_init[26]-theta[2272]*z_init[27]-theta[2273]*z_init[28]-theta[2274]*z_init[29]-theta[2275]*z_init[30]-theta[2276]*z_init[31]-theta[2277]*z_init[32]-theta[2278]*z_init[33]-theta[2279]*z_init[34]-theta[2280]*z_init[35]-theta[2281]*z_init[36]-theta[2282]*z_init[37]-theta[2283]*z_init[38]-theta[2284]*z_init[39]-theta[2285]*z_init[40]-theta[2286]*z_init[41]-theta[2287]*z_init[42]-theta[2288]*z_init[43]-theta[2289]*z_init[44]-theta[2290]*z_init[45]-theta[2291]*z_init[46]-theta[2292]*z_init[47]-theta[2293]*z_init[48]-theta[2294]*z_init[49]-theta[2295]*z_init[50] )) * z_init[45]; // Competitor 1
    dydt[46] = ( exp(theta[2296]-theta[2297]*z_init[1]-theta[2298]*z_init[2]-theta[2299]*z_init[3]-theta[2300]*z_init[4]-theta[2301]*z_init[5]-theta[2302]*z_init[6]-theta[2303]*z_init[7]-theta[2304]*z_init[8]-theta[2305]*z_init[9]-theta[2306]*z_init[10]-theta[2307]*z_init[11]-theta[2308]*z_init[12]-theta[2309]*z_init[13]-theta[2310]*z_init[14]-theta[2311]*z_init[15]-theta[2312]*z_init[16]-theta[2313]*z_init[17]-theta[2314]*z_init[18]-theta[2315]*z_init[19]-theta[2316]*z_init[20]-theta[2317]*z_init[21]-theta[2318]*z_init[22]-theta[2319]*z_init[23]-theta[2320]*z_init[24]-theta[2321]*z_init[25]-theta[2322]*z_init[26]-theta[2323]*z_init[27]-theta[2324]*z_init[28]-theta[2325]*z_init[29]-theta[2326]*z_init[30]-theta[2327]*z_init[31]-theta[2328]*z_init[32]-theta[2329]*z_init[33]-theta[2330]*z_init[34]-theta[2331]*z_init[35]-theta[2332]*z_init[36]-theta[2333]*z_init[37]-theta[2334]*z_init[38]-theta[2335]*z_init[39]-theta[2336]*z_init[40]-theta[2337]*z_init[41]-theta[2338]*z_init[42]-theta[2339]*z_init[43]-theta[2340]*z_init[44]-theta[2341]*z_init[45]-theta[2342]*z_init[46]-theta[2343]*z_init[47]-theta[2344]*z_init[48]-theta[2345]*z_init[49]-theta[2346]*z_init[50])) * z_init[46]; // Competitor 2
    dydt[47] = ( exp(theta[2347]-theta[2348]*z_init[1]-theta[2349]*z_init[2]-theta[2350]*z_init[3]-theta[2351]*z_init[4]-theta[2352]*z_init[5]-theta[2353]*z_init[6]-theta[2354]*z_init[7]-theta[2355]*z_init[8]-theta[2356]*z_init[9]-theta[2357]*z_init[10]-theta[2358]*z_init[11]-theta[2359]*z_init[12]-theta[2360]*z_init[13]-theta[2361]*z_init[14]-theta[2362]*z_init[15]-theta[2363]*z_init[16]-theta[2364]*z_init[17]-theta[2365]*z_init[18]-theta[2366]*z_init[19]-theta[2367]*z_init[20]-theta[2368]*z_init[21]-theta[2369]*z_init[22]-theta[2370]*z_init[23]-theta[2371]*z_init[24]-theta[2372]*z_init[25]-theta[2373]*z_init[26]-theta[2374]*z_init[27]-theta[2375]*z_init[28]-theta[2376]*z_init[29]-theta[2377]*z_init[30]-theta[2378]*z_init[31]-theta[2379]*z_init[32]-theta[2380]*z_init[33]-theta[2381]*z_init[34]-theta[2382]*z_init[35]-theta[2383]*z_init[36]-theta[2384]*z_init[37]-theta[2385]*z_init[38]-theta[2386]*z_init[39]-theta[2387]*z_init[40]-theta[2388]*z_init[41]-theta[2389]*z_init[42]-theta[2390]*z_init[43]-theta[2391]*z_init[44]-theta[2392]*z_init[45]-theta[2393]*z_init[46]-theta[2394]*z_init[47]-theta[2395]*z_init[48]-theta[2396]*z_init[49]-theta[2397]*z_init[50] )) * z_init[47]; // Competitor 1
    dydt[48] = ( exp(theta[2398]-theta[2399]*z_init[1]-theta[2400]*z_init[2]-theta[2401]*z_init[3]-theta[2402]*z_init[4]-theta[2403]*z_init[5]-theta[2404]*z_init[6]-theta[2405]*z_init[7]-theta[2406]*z_init[8]-theta[2407]*z_init[9]-theta[2408]*z_init[10]-theta[2409]*z_init[11]-theta[2410]*z_init[12]-theta[2411]*z_init[13]-theta[2412]*z_init[14]-theta[2413]*z_init[15]-theta[2414]*z_init[16]-theta[2415]*z_init[17]-theta[2416]*z_init[18]-theta[2417]*z_init[19]-theta[2418]*z_init[20]-theta[2419]*z_init[21]-theta[2420]*z_init[22]-theta[2421]*z_init[23]-theta[2422]*z_init[24]-theta[2423]*z_init[25]-theta[2424]*z_init[26]-theta[2425]*z_init[27]-theta[2426]*z_init[28]-theta[2427]*z_init[29]-theta[2428]*z_init[30]-theta[2429]*z_init[31]-theta[2430]*z_init[32]-theta[2431]*z_init[33]-theta[2432]*z_init[34]-theta[2433]*z_init[35]-theta[2434]*z_init[36]-theta[2435]*z_init[37]-theta[2436]*z_init[38]-theta[2437]*z_init[39]-theta[2438]*z_init[40]-theta[2439]*z_init[41]-theta[2440]*z_init[42]-theta[2441]*z_init[43]-theta[2442]*z_init[44]-theta[2443]*z_init[45]-theta[2444]*z_init[46]-theta[2445]*z_init[47]-theta[2446]*z_init[48]-theta[2447]*z_init[49]-theta[2448]*z_init[50])) * z_init[48]; // Competitor 2
    dydt[49] = ( exp(theta[2449]-theta[2450]*z_init[1]-theta[2451]*z_init[2]-theta[2452]*z_init[3]-theta[2453]*z_init[4]-theta[2454]*z_init[5]-theta[2455]*z_init[6]-theta[2456]*z_init[7]-theta[2457]*z_init[8]-theta[2458]*z_init[9]-theta[2459]*z_init[10]-theta[2460]*z_init[11]-theta[2461]*z_init[12]-theta[2462]*z_init[13]-theta[2463]*z_init[14]-theta[2464]*z_init[15]-theta[2465]*z_init[16]-theta[2466]*z_init[17]-theta[2467]*z_init[18]-theta[2468]*z_init[19]-theta[2469]*z_init[20]-theta[2470]*z_init[21]-theta[2471]*z_init[22]-theta[2472]*z_init[23]-theta[2473]*z_init[24]-theta[2474]*z_init[25]-theta[2475]*z_init[26]-theta[2476]*z_init[27]-theta[2477]*z_init[28]-theta[2478]*z_init[29]-theta[2479]*z_init[30]-theta[2480]*z_init[31]-theta[2481]*z_init[32]-theta[2482]*z_init[33]-theta[2483]*z_init[34]-theta[2484]*z_init[35]-theta[2485]*z_init[36]-theta[2486]*z_init[37]-theta[2487]*z_init[38]-theta[2488]*z_init[39]-theta[2489]*z_init[40]-theta[2490]*z_init[41]-theta[2491]*z_init[42]-theta[2492]*z_init[43]-theta[2493]*z_init[44]-theta[2494]*z_init[45]-theta[2495]*z_init[46]-theta[2496]*z_init[47]-theta[2497]*z_init[48]-theta[2498]*z_init[49]-theta[2499]*z_init[50] )) * z_init[49]; // Competitor 1
    dydt[50] = ( exp(theta[2500]-theta[2501]*z_init[1]-theta[2502]*z_init[2]-theta[2503]*z_init[3]-theta[2504]*z_init[4]-theta[2505]*z_init[5]-theta[2506]*z_init[6]-theta[2507]*z_init[7]-theta[2508]*z_init[8]-theta[2509]*z_init[9]-theta[2510]*z_init[10]-theta[2511]*z_init[11]-theta[2512]*z_init[12]-theta[2513]*z_init[13]-theta[2514]*z_init[14]-theta[2515]*z_init[15]-theta[2516]*z_init[16]-theta[2517]*z_init[17]-theta[2518]*z_init[18]-theta[2519]*z_init[19]-theta[2520]*z_init[20]-theta[2521]*z_init[21]-theta[2522]*z_init[22]-theta[2523]*z_init[23]-theta[2524]*z_init[24]-theta[2525]*z_init[25]-theta[2526]*z_init[26]-theta[2527]*z_init[27]-theta[2528]*z_init[28]-theta[2529]*z_init[29]-theta[2530]*z_init[30]-theta[2531]*z_init[31]-theta[2532]*z_init[32]-theta[2533]*z_init[33]-theta[2534]*z_init[34]-theta[2535]*z_init[35]-theta[2536]*z_init[36]-theta[2537]*z_init[37]-theta[2538]*z_init[38]-theta[2539]*z_init[39]-theta[2540]*z_init[40]-theta[2541]*z_init[41]-theta[2542]*z_init[42]-theta[2543]*z_init[43]-theta[2544]*z_init[44]-theta[2545]*z_init[45]-theta[2546]*z_init[46]-theta[2547]*z_init[47]-theta[2548]*z_init[48]-theta[2549]*z_init[49]-theta[2550]*z_init[50])) * z_init[50]; // Competitor 2

    return dydt;
  }
}

data {
  int<lower = 0> N;          // number of measurement times
  int<lower = 0> S;          // number of species
  real ts[N];                // measurement times > 0
  real y_init[S];            // initial measured populations
  real t_init;               // initial time
  real<lower = 0> y[N, S];   // measured populations
}

transformed data{
  real times_measured[N];    // N-1 because first time is initial state
  for ( i in 2:N+1 ) times_measured[i-1] = i;
}

parameters {
  real<lower = 0> theta[2550];   // { alpha, beta}
  real<lower = 0> z_init[S];  // initial population
  real<lower = 0> sigma[S];   // measurement errors
}

transformed parameters {
  real z[N, S]
  = integrate_ode_rk45(ode_Ricker, z_init, t_init, times_measured, theta,
                         rep_array(0.0, 0), rep_array(0, 0),
                         1e-5, 1e-3, 5e2);
}

model {
  theta ~ normal(0, 1);
  sigma ~ lognormal(-1, 5);
  z_init ~ lognormal(log(1), 1);
  for (k in 1:S) {
    y_init[k] ~ lognormal(log(z_init[k]), sigma[k]);
    y[ , k] ~ lognormal(log(z[, k]), sigma[k]);
  }
}

generated quantities {
  real y_init_rep[S];
  real y_rep[N, S];
  for (k in 1:S) {
    y_init_rep[k] = lognormal_rng(log(z_init[k]), sigma[k]);
    for (n in 1:N)
      y_rep[n, k] = lognormal_rng(log(z[n, k]), sigma[k]);
  }
}
